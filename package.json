{
  "name": "dcard-draw-card-backend",
  "version": "0.0.0",
  "scripts": {
    "build-js": "./node_modules/.bin/ts-node build.ts",
    "build-ts": "tsc --project './tsconfig.json'",
    "build": "tsc -p .",
    "lint": "eslint . --ext .ts",
    "start": "NODE_ENV=development node dist/src/index.js",
    "start:docker": "NODE_ENV=production node dist/src/index.js",
    "dev": "NODE_ENV=development nodemon --watch . --ext ts",
    "test": "./node_modules/mocha/bin/mocha -t 3000 --require ts-node/register spec/tests/faker.spec.ts",
    "test-js": "./node_modules/mocha/bin/mocha -t 3000 dist/spec/tests/faker.spec.js",
    "test:nodemon": "nodemon --config ./spec/nodemon.json",
    "test-dev": "nodemon --watch . --ext ts --exec \"mocha -r ts-node/register spec/**/*.spec.ts\"",
    "test:mocha": "mocha --require ts-node/register spec/**/*.spec.ts",
    "test-mocha": "mocha -r ts-node/register spec/**/*.spec.ts",
    "make-env": "cp ./env/.example-loaclhost.env  ./env/development.env && cp ./env/.example-docker.env ./env/production.env"
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts, html",
    "ignore": [
      "src/public"
    ],
    "exec": "./node_modules/.bin/ts-node -r tsconfig-paths/register ./src"
  },
  "_moduleAliases": {
    "@daos": "dist/daos",
    "@entities": "dist/entities",
    "@shared": "dist/shared",
    "@server": "dist/Server"
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking"
    ],
    "parserOptions": {
      "project": "./tsconfig.json"
    },
    "rules": {
      "max-len": [
        "error",
        {
          "code": 100
        }
      ],
      "no-console": 1,
      "no-extra-boolean-cast": 0,
      "@typescript-eslint/restrict-plus-operands": 0,
      "@typescript-eslint/explicit-module-boundary-types": 0,
      "@typescript-eslint/no-explicit-any": 0,
      "@typescript-eslint/no-floating-promises": 0,
      "@typescript-eslint/no-unsafe-member-access": 0,
      "@typescript-eslint/no-unsafe-assignment": 0
    }
  },
  "eslintIgnore": [
    "src/public/",
    "build.ts"
  ],
  "dependencies": {
    "command-line-args": "^5.1.1",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "express-async-errors": "^3.1.1",
    "faker": "^5.4.0",
    "helmet": "^4.4.1",
    "http-status-codes": "^2.1.4",
    "ioredis": "^4.24.3",
    "jet-logger": "^1.0.4",
    "joi": "^17.4.0",
    "jsonfile": "^6.1.0",
    "lodash": "^4.17.21",
    "module-alias": "^2.2.2",
    "mongodb": "^3.6.5",
    "mongoose": "^5.12.1",
    "morgan": "^1.10.0"
  },
  "devDependencies": {
    "@types/chai": "^4.2.15",
    "@types/chai-http": "^4.2.0",
    "@types/command-line-args": "^5.0.0",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.10",
    "@types/express": "^4.17.11",
    "@types/faker": "^5.1.7",
    "@types/find": "^0.2.1",
    "@types/fs-extra": "^9.0.8",
    "@types/ioredis": "^4.22.1",
    "@types/jasmine": "^3.6.7",
    "@types/jsonfile": "^6.0.0",
    "@types/lodash": "^4.14.168",
    "@types/mocha": "^8.2.2",
    "@types/mongodb": "^3.6.10",
    "@types/mongoose": "^5.10.3",
    "@types/morgan": "^1.9.2",
    "@types/node": "^14.14.35",
    "@types/redis": "^2.8.28",
    "@types/supertest": "^2.0.10",
    "@typescript-eslint/eslint-plugin": "^4.18.0",
    "@typescript-eslint/parser": "^4.18.0",
    "assert": "^2.0.0",
    "chai": "^4.3.4",
    "eslint": "^7.22.0",
    "eslint-config-airbnb-typescript": "^12.3.1",
    "eslint-plugin-import": "^2.22.1",
    "find": "^0.3.0",
    "fs-extra": "^9.1.0",
    "jasmine": "^3.7.0",
    "mocha": "^8.3.2",
    "nodemon": "^2.0.7",
    "prettier": "^2.2.1",
    "redis": "^3.0.2",
    "supertest": "^6.1.3",
    "ts-node": "^9.1.1",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^4.2.3"
  },
  "prettier": {
    "trailingComma": "es5",
    "tabWidth": 2,
    "semi": true,
    "singleQuote": true,
    "jsxSingleQuote": true
  }
}
